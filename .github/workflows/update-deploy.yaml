name: Build, Push and Deploy to Kubernetes

on:
  push:
    branches: [main]

jobs:
  test_django:
    uses: yllorca/djangok8s/.github/workflows/django-test.yaml@main

  deploy:
    needs: [test_django]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            yllorca/django-k8s:${{ github.sha }}
            yllorca/django-k8s:latest
          file: Dockerfile.djangok8s
          no-cache: true  # Deshabilita el uso de caché

      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo '${{ secrets.KUBECONFIG }}' > ~/.kube/config

      - name: Update deployment secrets
        run: |
          cat << EOF >> ./.env.prod
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          AWS_BUCKET=${{ secrets.AWS_BUCKET }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          DEBUG=${{ secrets.DEBUG }}
          ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          EOF
          kubectl delete secret djangok8s-prod-env --ignore-not-found=true -n djangok8s
          kubectl create secret generic djangok8s-prod-env --from-env-file=./.env.prod -n djangok8s

      - name: Update Deployment image
        run: |
          kubectl -n djangok8s set image deployment/djangok8s-deployment django-k8s=yllorca/django-k8s:latest
          kubectl -n djangok8s set image deployment/celery-worker celery=yllorca/django-k8s:latest

      - name: Wait for rollout to finish
        run: |
          kubectl -n djangok8s rollout restart deployment/djangok8s-deployment
          kubectl -n djangok8s rollout restart deployment/celery-worker

      - name: Post-build Django Commands
        run: |
          export SINGLE_POD_NAME=$(kubectl get pod -l app=djangok8s-deployment -o jsonpath="{.items[0].metadata.name}" -n djangok8s)
          # Aquí agregas los comandos adicionales que necesitas ejecutar en el pod
